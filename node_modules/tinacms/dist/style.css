/**
Use a better box model (opinionated).
*/

.tina-tailwind *,
.tina-tailwind ::before,
.tina-tailwind ::after {
	box-sizing: border-box;
}

/**
Use a more readable tab size (opinionated).
*/

.tina-tailwind html {
	-moz-tab-size: 4;
	tab-size: 4;
}

/**
1. Correct the line height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
*/

.tina-tailwind html {
	line-height: 1.15; /* 1 */
	-webkit-text-size-adjust: 100%; /* 2 */
}

/**
Remove the margin in all browsers.
*/

.tina-tailwind body {
	margin: 0;
}

/**
Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
*/

.tina-tailwind body {
	font-family:
		system-ui,
		-apple-system, /* Firefox supports this but not yet `system-ui` */
		'Segoe UI',
		Roboto,
		Helvetica,
		Arial,
		sans-serif,
		'Apple Color Emoji',
		'Segoe UI Emoji';
}

/**
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
*/

.tina-tailwind hr {
	height: 0; /* 1 */
	color: inherit; /* 2 */
}

/**
Add the correct text decoration in Chrome, Edge, and Safari.
*/

.tina-tailwind abbr[title] {
	text-decoration: underline dotted;
}

/**
Add the correct font weight in Edge and Safari.
*/

.tina-tailwind b,
.tina-tailwind strong {
	font-weight: bolder;
}

/**
1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
2. Correct the odd 'em' font sizing in all browsers.
*/

.tina-tailwind code,
.tina-tailwind kbd,
.tina-tailwind samp,
.tina-tailwind pre {
	font-family:
		ui-monospace,
		SFMono-Regular,
		Consolas,
		'Liberation Mono',
		Menlo,
		monospace; /* 1 */
	font-size: 1em; /* 2 */
}

/**
Add the correct font size in all browsers.
*/

.tina-tailwind small {
	font-size: 80%;
}

/**
Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.
*/

.tina-tailwind sub,
.tina-tailwind sup {
	font-size: 75%;
	line-height: 0;
	position: relative;
	vertical-align: baseline;
}

/*
Text-level semantics
====================
*/

.tina-tailwind sub {
	bottom: -0.25em;
}

/*
Grouping content
================
*/

.tina-tailwind sup {
	top: -0.5em;
}

/**
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
*/

.tina-tailwind table {
	text-indent: 0; /* 1 */
	border-color: inherit; /* 2 */
}

/**
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
*/

.tina-tailwind button,
.tina-tailwind input,
.tina-tailwind optgroup,
.tina-tailwind select,
.tina-tailwind textarea {
	font-family: inherit; /* 1 */
	font-size: 100%; /* 1 */
	line-height: 1.15; /* 1 */
	margin: 0; /* 2 */
}

/**
Remove the inheritance of text transform in Edge and Firefox.
1. Remove the inheritance of text transform in Firefox.
*/

.tina-tailwind button,
.tina-tailwind select { /* 1 */
	text-transform: none;
}

/**
Correct the inability to style clickable types in iOS and Safari.
*/

.tina-tailwind button,
.tina-tailwind [type='button'],
.tina-tailwind [type='reset'],
.tina-tailwind [type='submit'] {
	-webkit-appearance: button;
}

/**
Remove the inner border and padding in Firefox.
*/

.tina-tailwind ::-moz-focus-inner {
	border-style: none;
	padding: 0;
}

/**
Restore the focus styles unset by the previous rule.
*/

.tina-tailwind :-moz-focusring {
	outline: 1px dotted ButtonText;
}

/**
Remove the additional ':invalid' styles in Firefox.
See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737
*/

.tina-tailwind :-moz-ui-invalid {
	box-shadow: none;
}

/**
Remove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.
*/

.tina-tailwind legend {
	padding: 0;
}

/**
Add the correct vertical alignment in Chrome and Firefox.
*/

.tina-tailwind progress {
	vertical-align: baseline;
}

/**
Correct the cursor style of increment and decrement buttons in Safari.
*/

.tina-tailwind ::-webkit-inner-spin-button,
.tina-tailwind ::-webkit-outer-spin-button {
	height: auto;
}

/**
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

.tina-tailwind [type='search'] {
	-webkit-appearance: textfield; /* 1 */
	outline-offset: -2px; /* 2 */
}

/**
Remove the inner padding in Chrome and Safari on macOS.
*/

.tina-tailwind ::-webkit-search-decoration {
	-webkit-appearance: none;
}

/**
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to 'inherit' in Safari.
*/

.tina-tailwind ::-webkit-file-upload-button {
	-webkit-appearance: button; /* 1 */
	font: inherit; /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

.tina-tailwind summary {
	display: list-item;
}

/**
 * Removes the default spacing and border for appropriate elements.
 */

.tina-tailwind blockquote,
.tina-tailwind dl,
.tina-tailwind dd,
.tina-tailwind h1,
.tina-tailwind h2,
.tina-tailwind h3,
.tina-tailwind h4,
.tina-tailwind h5,
.tina-tailwind h6,
.tina-tailwind hr,
.tina-tailwind figure,
.tina-tailwind p,
.tina-tailwind pre {
  margin: 0;
}

/**
 * Manually forked from SUIT CSS Base: https://github.com/suitcss/base
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications.
 */

.tina-tailwind button {
  background-color: transparent;
  background-image: none;
}

/*
Interactive
===========
*/

.tina-tailwind fieldset {
  margin: 0;
  padding: 0;
}

/*
Forms
=====
*/

.tina-tailwind ol,
.tina-tailwind ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

/**
 * 1. Use the user's configured `sans` font-family (with Tailwind's default
 *    sans-serif font stack as a fallback) as a sane default.
 * 2. Use Tailwind's default "normal" line-height so the user isn't forced
 *    to override it to ensure consistency even when using the default theme.
 */

.tina-tailwind html {
  font-family: Inter, ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 1 */
  line-height: 1.5; /* 2 */
}

/**
 * Inherit font-family and line-height from `html` so users can set them as
 * a class directly on the `html` element.
 */

.tina-tailwind body {
  font-family: inherit;
  line-height: inherit;
}

/**
 * 1. Prevent padding and border from affecting element width.
 *
 *    We used to set this in the html element and inherit from
 *    the parent element for everything else. This caused issues
 *    in shadow-dom-enhanced elements like <details> where the content
 *    is wrapped by a div with box-sizing set to `content-box`.
 *
 *    https://github.com/mozdevs/cssremedy/issues/4
 *
 *
 * 2. Allow adding a border to an element by just adding a border-width.
 *
 *    By default, the way the browser specifies that an element should have no
 *    border is by setting it's border-style to `none` in the user-agent
 *    stylesheet.
 *
 *    In order to easily add borders to elements by just setting the `border-width`
 *    property, we change the default border-style for all elements to `solid`, and
 *    use border-width to hide them instead. This way our `border` utilities only
 *    need to set the `border-width` property instead of the entire `border`
 *    shorthand, making our border utilities much more straightforward to compose.
 *
 *    https://github.com/tailwindcss/tailwindcss/pull/116
 */

.tina-tailwind *,
.tina-tailwind ::before,
.tina-tailwind ::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: currentColor; /* 2 */
}

/*
 * Ensure horizontal rules are visible by default
 */

.tina-tailwind hr {
  border-top-width: 1px;
}

/**
 * Undo the `border-style: none` reset that Normalize applies to images so that
 * our `border-{width}` utilities have the expected effect.
 *
 * The Normalize reset is unnecessary for us since we default the border-width
 * to 0 on all elements.
 *
 * https://github.com/tailwindcss/tailwindcss/issues/362
 */

.tina-tailwind img {
  border-style: solid;
}

/**
 * Tailwind custom reset styles
 */

.tina-tailwind textarea {
  resize: vertical;
}

/*
Tabular data
============
*/

.tina-tailwind input::placeholder,
.tina-tailwind textarea::placeholder {
  opacity: 1;
  color: #918c9e;
}

/*
Sections
========
*/

.tina-tailwind button,
.tina-tailwind [role="button"] {
  cursor: pointer;
}

/**
 * Override legacy focus reset from Normalize with modern Firefox focus styles.
 *
 * This is actually an improvement over the new defaults in Firefox in our testing,
 * as it triggers the better focus styles even for links, which still use a dotted
 * outline in Firefox by default.
 */

.tina-tailwind :-moz-focusring {
	outline: auto;
}

/*
Document
========
*/

.tina-tailwind table {
  border-collapse: collapse;
}

/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */

.tina-tailwind h1,
.tina-tailwind h2,
.tina-tailwind h3,
.tina-tailwind h4,
.tina-tailwind h5,
.tina-tailwind h6 {
  font-size: inherit;
  font-weight: inherit;
}

/**
 * Reset links to optimize for opt-in styling instead of
 * opt-out.
 */

.tina-tailwind a {
  color: inherit;
  text-decoration: inherit;
}

/**
 * Reset form element properties that are easy to forget to
 * style explicitly so you don't inadvertently introduce
 * styles that deviate from your design system. These styles
 * supplement a partial reset that is already applied by
 * normalize.css.
 */

.tina-tailwind button,
.tina-tailwind input,
.tina-tailwind optgroup,
.tina-tailwind select,
.tina-tailwind textarea {
  padding: 0;
  line-height: inherit;
  color: inherit;
}

/**
 * Use the configured 'mono' font family for elements that
 * are expected to be rendered with a monospace font, falling
 * back to the system monospace stack if there is no configured
 * 'mono' font family.
 */

.tina-tailwind pre,
.tina-tailwind code,
.tina-tailwind kbd,
.tina-tailwind samp {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}

/**
 * 1. Make replaced elements `display: block` by default as that's
 *    the behavior you want almost all of the time. Inspired by
 *    CSS Remedy, with `svg` added as well.
 *
 *    https://github.com/mozdevs/cssremedy/issues/14
 * 
 * 2. Add `vertical-align: middle` to align replaced elements more
 *    sensibly by default when overriding `display` by adding a
 *    utility like `inline`.
 *
 *    This can trigger a poorly considered linting error in some
 *    tools but is included by design.
 * 
 *    https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210
 */

.tina-tailwind img,
.tina-tailwind svg,
.tina-tailwind video,
.tina-tailwind canvas,
.tina-tailwind audio,
.tina-tailwind iframe,
.tina-tailwind embed,
.tina-tailwind object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}

/**
 * Constrain images and videos to the parent width and preserve
 * their intrinsic aspect ratio.
 *
 * https://github.com/mozdevs/cssremedy/issues/14
 */

.tina-tailwind img,
.tina-tailwind video {
  max-width: 100%;
  height: auto;
}

/**
 * Ensure the default browser behavior of the `hidden` attribute.
 */

.tina-tailwind [hidden] {
  display: none;
}

/*! tailwindcss v2.2.19 | MIT License | https://tailwindcss.com
*/

.tina-tailwind *, .tina-tailwind ::before, .tina-tailwind ::after {
	--tw-translate-x: 0;
	--tw-translate-y: 0;
	--tw-rotate: 0;
	--tw-skew-x: 0;
	--tw-skew-y: 0;
	--tw-scale-x: 1;
	--tw-scale-y: 1;
	--tw-transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.tina-tailwind *, .tina-tailwind ::before, .tina-tailwind ::after {
	--tw-border-opacity: 1;
	border-color: rgba(225, 221, 236, var(--tw-border-opacity));
}

.tina-tailwind *, .tina-tailwind ::before, .tina-tailwind ::after {
	--tw-ring-offset-shadow: 0 0 #0000;
	--tw-ring-shadow: 0 0 #0000;
	--tw-shadow: 0 0 #0000;
}

.tina-tailwind *, .tina-tailwind ::before, .tina-tailwind ::after {
	--tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
	--tw-ring-offset-width: 0px;
	--tw-ring-offset-color: #fff;
	--tw-ring-color: rgba(0, 132, 255, 0.5);
	--tw-ring-offset-shadow: 0 0 #0000;
	--tw-ring-shadow: 0 0 #0000;
	--tw-shadow: 0 0 #0000;
}

.tina-tailwind *, .tina-tailwind ::before, .tina-tailwind ::after {
	--tw-blur: var(--tw-empty,/*!*/ /*!*/);
	--tw-brightness: var(--tw-empty,/*!*/ /*!*/);
	--tw-contrast: var(--tw-empty,/*!*/ /*!*/);
	--tw-grayscale: var(--tw-empty,/*!*/ /*!*/);
	--tw-hue-rotate: var(--tw-empty,/*!*/ /*!*/);
	--tw-invert: var(--tw-empty,/*!*/ /*!*/);
	--tw-saturate: var(--tw-empty,/*!*/ /*!*/);
	--tw-sepia: var(--tw-empty,/*!*/ /*!*/);
	--tw-drop-shadow: var(--tw-empty,/*!*/ /*!*/);
	--tw-filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.tina-tailwind .static {
	position: static !important;
}

.tina-tailwind .fixed {
	position: fixed !important;
}

.tina-tailwind .absolute {
	position: absolute !important;
}

.tina-tailwind .relative {
	position: relative !important;
}

.tina-tailwind .left-0 {
	left: 0px !important;
}

.tina-tailwind .right-0 {
	right: 0px !important;
}

.tina-tailwind .bottom-2 {
	bottom: 8px !important;
}

.tina-tailwind .right-5 {
	right: 20px !important;
}

.tina-tailwind .z-50 {
	z-index: 50 !important;
}

.tina-tailwind .mx-auto {
	margin-left: auto !important;
	margin-right: auto !important;
}

.tina-tailwind .mr-2 {
	margin-right: 8px !important;
}

.tina-tailwind .mb-2 {
	margin-bottom: 8px !important;
}

.tina-tailwind .mb-1 {
	margin-bottom: 4px !important;
}

.tina-tailwind .-mt-0\.5 {
	margin-top: -2px !important;
}

.tina-tailwind .-mt-0 {
	margin-top: 0px !important;
}

.tina-tailwind .ml-1 {
	margin-left: 4px !important;
}

.tina-tailwind .mt-2 {
	margin-top: 8px !important;
}

.tina-tailwind .mr-1\.5 {
	margin-right: 6px !important;
}

.tina-tailwind .mr-1 {
	margin-right: 4px !important;
}

.tina-tailwind .block {
	display: block !important;
}

.tina-tailwind .inline-block {
	display: inline-block !important;
}

.tina-tailwind .flex {
	display: flex !important;
}

.tina-tailwind .inline-flex {
	display: inline-flex !important;
}

.tina-tailwind .table {
	display: table !important;
}

.tina-tailwind .h-screen {
	height: 100vh !important;
}

.tina-tailwind .h-auto {
	height: auto !important;
}

.tina-tailwind .h-full {
	height: 100% !important;
}

.tina-tailwind .h-6 {
	height: 24px !important;
}

.tina-tailwind .h-10 {
	height: 40px !important;
}

.tina-tailwind .h-5 {
	height: 20px !important;
}

.tina-tailwind .w-full {
	width: 100% !important;
}

.tina-tailwind .w-10 {
	width: 40px !important;
}

.tina-tailwind .w-auto {
	width: auto !important;
}

.tina-tailwind .w-5 {
	width: 20px !important;
}

.tina-tailwind .w-56 {
	width: 224px !important;
}

.tina-tailwind .w-0 {
	width: 0px !important;
}

.tina-tailwind .w-6 {
	width: 24px !important;
}

.tina-tailwind .max-w-lg {
	max-width: 32rem !important;
}

.tina-tailwind .max-w-screen-xl {
	max-width: 1280px !important;
}

.tina-tailwind .max-w-form {
	max-width: 900px !important;
}

.tina-tailwind .max-w-full {
	max-width: 100% !important;
}

.tina-tailwind .flex-1 {
	flex: 1 1 0% !important;
}

.tina-tailwind .table-auto {
	table-layout: auto !important;
}

.tina-tailwind .origin-top-right {
	transform-origin: top right !important;
}

.tina-tailwind .translate-y-full {
	--tw-translate-y: 100% !important;
	transform: var(--tw-transform) !important;
}

.tina-tailwind .-translate-y-2 {
	--tw-translate-y: -8px !important;
	transform: var(--tw-transform) !important;
}

.tina-tailwind .translate-y-0 {
	--tw-translate-y: 0px !important;
	transform: var(--tw-transform) !important;
}

.tina-tailwind .scale-95 {
	--tw-scale-x: .95 !important;
	--tw-scale-y: .95 !important;
	transform: var(--tw-transform) !important;
}

.tina-tailwind .scale-100 {
	--tw-scale-x: 1 !important;
	--tw-scale-y: 1 !important;
	transform: var(--tw-transform) !important;
}

.tina-tailwind .transform {
	transform: var(--tw-transform) !important;
}

.tina-tailwind .flex-col {
	flex-direction: column !important;
}

.tina-tailwind .items-end {
	align-items: flex-end !important;
}

.tina-tailwind .items-center {
	align-items: center !important;
}

.tina-tailwind .items-stretch {
	align-items: stretch !important;
}

.tina-tailwind .justify-center {
	justify-content: center !important;
}

.tina-tailwind .justify-between {
	justify-content: space-between !important;
}

.tina-tailwind .gap-0\.5 {
	gap: 2px !important;
}

.tina-tailwind .gap-0 {
	gap: 0px !important;
}

.tina-tailwind .gap-4 {
	gap: 16px !important;
}

.tina-tailwind .gap-3 {
	gap: 12px !important;
}

.tina-tailwind .divide-y > :not([hidden]) ~ :not([hidden]) {
	--tw-divide-y-reverse: 0 !important;
	border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse))) !important;
	border-bottom-width: calc(1px * var(--tw-divide-y-reverse)) !important;
}

.tina-tailwind .overflow-hidden {
	overflow: hidden !important;
}

.tina-tailwind .overflow-y-auto {
	overflow-y: auto !important;
}

.tina-tailwind .whitespace-nowrap {
	white-space: nowrap !important;
}

.tina-tailwind .rounded-lg {
	border-radius: 8px !important;
}

.tina-tailwind .rounded-full {
	border-radius: 9999px !important;
}

.tina-tailwind .rounded-md {
	border-radius: 6px !important;
}

.tina-tailwind .border {
	border-width: 1px !important;
}

.tina-tailwind .border-b {
	border-bottom-width: 1px !important;
}

.tina-tailwind .border-gray-200 {
	--tw-border-opacity: 1 !important;
	border-color: rgba(225, 221, 236, var(--tw-border-opacity)) !important;
}

.tina-tailwind .border-transparent {
	border-color: transparent !important;
}

.tina-tailwind .bg-white {
	--tw-bg-opacity: 1 !important;
	background-color: rgba(255, 255, 255, var(--tw-bg-opacity)) !important;
}

.tina-tailwind .bg-gray-50 {
	--tw-bg-opacity: 1 !important;
	background-color: rgba(246, 246, 249, var(--tw-bg-opacity)) !important;
}

.tina-tailwind .bg-blue-500 {
	--tw-bg-opacity: 1 !important;
	background-color: rgba(0, 132, 255, var(--tw-bg-opacity)) !important;
}

.tina-tailwind .bg-gradient-to-b {
	background-image: linear-gradient(to bottom, var(--tw-gradient-stops)) !important;
}

.tina-tailwind .from-blue-900 {
	--tw-gradient-from: #1D2C6C !important;
	--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(29, 44, 108, 0)) !important;
}

.tina-tailwind .to-gray-900 {
	--tw-gradient-to: #252336 !important;
}

.tina-tailwind .px-4 {
	padding-left: 16px !important;
	padding-right: 16px !important;
}

.tina-tailwind .py-6 {
	padding-top: 24px !important;
	padding-bottom: 24px !important;
}

.tina-tailwind .px-5 {
	padding-left: 20px !important;
	padding-right: 20px !important;
}

.tina-tailwind .py-4 {
	padding-top: 16px !important;
	padding-bottom: 16px !important;
}

.tina-tailwind .px-12 {
	padding-left: 48px !important;
	padding-right: 48px !important;
}

.tina-tailwind .py-10 {
	padding-top: 40px !important;
	padding-bottom: 40px !important;
}

.tina-tailwind .px-20 {
	padding-left: 80px !important;
	padding-right: 80px !important;
}

.tina-tailwind .px-6 {
	padding-left: 24px !important;
	padding-right: 24px !important;
}

.tina-tailwind .py-1 {
	padding-top: 4px !important;
	padding-bottom: 4px !important;
}

.tina-tailwind .py-2 {
	padding-top: 8px !important;
	padding-bottom: 8px !important;
}

.tina-tailwind .py-3 {
	padding-top: 12px !important;
	padding-bottom: 12px !important;
}

.tina-tailwind .px-8 {
	padding-left: 32px !important;
	padding-right: 32px !important;
}

.tina-tailwind .pb-4 {
	padding-bottom: 16px !important;
}

.tina-tailwind .pt-18 {
	padding-top: 72px !important;
}

.tina-tailwind .text-left {
	text-align: left !important;
}

.tina-tailwind .text-center {
	text-align: center !important;
}

.tina-tailwind .font-sans {
	font-family: Inter, ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji" !important;
}

.tina-tailwind .text-2xl {
	font-size: 24px !important;
	line-height: 1.33 !important;
}

.tina-tailwind .text-base {
	font-size: 16px !important;
	line-height: 1.5 !important;
}

.tina-tailwind .text-sm {
	font-size: 14px !important;
	line-height: 1.43 !important;
}

.tina-tailwind .text-xl {
	font-size: 20px !important;
	line-height: 1.4 !important;
}

.tina-tailwind .text-md {
	font-size: 16px !important;
	line-height: 1.5 !important;
}

.tina-tailwind .text-xs {
	font-size: 13px !important;
	line-height: 1.33 !important;
}

.tina-tailwind .font-medium {
	font-weight: 500 !important;
}

.tina-tailwind .uppercase {
	text-transform: uppercase !important;
}

.tina-tailwind .italic {
	font-style: italic !important;
}

.tina-tailwind .leading-normal {
	line-height: 1.5 !important;
}

.tina-tailwind .leading-tight {
	line-height: 1.25 !important;
}

.tina-tailwind .leading-5 {
	line-height: 20px !important;
}

.tina-tailwind .leading-4 {
	line-height: 16px !important;
}

.tina-tailwind .tracking-wide {
	letter-spacing: 0.025em !important;
}

.tina-tailwind .text-gray-700 {
	--tw-text-opacity: 1 !important;
	color: rgba(67, 62, 82, var(--tw-text-opacity)) !important;
}

.tina-tailwind .text-blue-600 {
	--tw-text-opacity: 1 !important;
	color: rgba(5, 116, 228, var(--tw-text-opacity)) !important;
}

.tina-tailwind .text-gray-500 {
	--tw-text-opacity: 1 !important;
	color: rgba(113, 108, 127, var(--tw-text-opacity)) !important;
}

.tina-tailwind .text-gray-400 {
	--tw-text-opacity: 1 !important;
	color: rgba(145, 140, 158, var(--tw-text-opacity)) !important;
}

.tina-tailwind .text-current {
	color: currentColor !important;
}

.tina-tailwind .text-white {
	--tw-text-opacity: 1 !important;
	color: rgba(255, 255, 255, var(--tw-text-opacity)) !important;
}

.tina-tailwind .text-gray-600 {
	--tw-text-opacity: 1 !important;
	color: rgba(86, 81, 101, var(--tw-text-opacity)) !important;
}

.tina-tailwind .text-gray-800 {
	--tw-text-opacity: 1 !important;
	color: rgba(54, 49, 69, var(--tw-text-opacity)) !important;
}

.tina-tailwind .text-gray-900 {
	--tw-text-opacity: 1 !important;
	color: rgba(37, 35, 54, var(--tw-text-opacity)) !important;
}

.tina-tailwind .text-blue-500 {
	--tw-text-opacity: 1 !important;
	color: rgba(0, 132, 255, var(--tw-text-opacity)) !important;
}

.tina-tailwind .text-blue-400 {
	--tw-text-opacity: 1 !important;
	color: rgba(34, 150, 254, var(--tw-text-opacity)) !important;
}

.tina-tailwind .underline {
	text-decoration: underline !important;
}

.tina-tailwind .opacity-100 {
	opacity: 1 !important;
}

.tina-tailwind .opacity-90 {
	opacity: .9 !important;
}

.tina-tailwind .opacity-80 {
	opacity: .8 !important;
}

.tina-tailwind .opacity-50 {
	opacity: .5 !important;
}

.tina-tailwind .opacity-70 {
	opacity: .7 !important;
}

.tina-tailwind .opacity-0 {
	opacity: 0 !important;
}

.tina-tailwind .shadow-lg {
	--tw-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05) !important;
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
}

.tina-tailwind .shadow-2xl {
	--tw-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25) !important;
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
}

.tina-tailwind .shadow {
	--tw-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06) !important;
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
}

.tina-tailwind .shadow-sm {
	--tw-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05) !important;
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
}

.tina-tailwind .ring-1 {
	--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
	--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
	box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
}

.tina-tailwind .ring-black {
	--tw-ring-opacity: 1 !important;
	--tw-ring-color: rgba(0, 0, 0, var(--tw-ring-opacity)) !important;
}

.tina-tailwind .ring-opacity-5 {
	--tw-ring-opacity: .05 !important;
}

.tina-tailwind .filter {
	filter: var(--tw-filter) !important;
}

.tina-tailwind .transition-opacity {
	transition-property: opacity !important;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !important;
	transition-duration: 150ms !important;
}

.tina-tailwind .transition-colors {
	transition-property: background-color, border-color, color, fill, stroke !important;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !important;
	transition-duration: 150ms !important;
}

.tina-tailwind .transition-all {
	transition-property: all !important;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !important;
	transition-duration: 150ms !important;
}

.tina-tailwind .transition {
	transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter !important;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !important;
	transition-duration: 150ms !important;
}

.tina-tailwind .duration-300 {
	transition-duration: 300ms !important;
}

.tina-tailwind .duration-150 {
	transition-duration: 150ms !important;
}

.tina-tailwind .duration-100 {
	transition-duration: 100ms !important;
}

.tina-tailwind .duration-75 {
	transition-duration: 75ms !important;
}

.tina-tailwind .ease-out {
	transition-timing-function: cubic-bezier(0, 0, 0.2, 1) !important;
}

.tina-tailwind .ease-in {
	transition-timing-function: cubic-bezier(0.4, 0, 1, 1) !important;
}

.tina-tailwind .ease-in-out {
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !important;
}

.tina-tailwind .icon-parent svg {
        fill: currentColor !important;
      }

.tina-tailwind {
    font-family: Inter, ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --tw-text-opacity: 1;
    color: rgba(86, 81, 101, var(--tw-text-opacity));
}

.first\:pt-3:first-child {
	padding-top: 12px !important;
}

.last\:pb-3:last-child {
	padding-bottom: 12px !important;
}

.hover\:bg-blue-600:hover {
	--tw-bg-opacity: 1 !important;
	background-color: rgba(5, 116, 228, var(--tw-bg-opacity)) !important;
}

.hover\:bg-gray-50:hover {
	--tw-bg-opacity: 1 !important;
	background-color: rgba(246, 246, 249, var(--tw-bg-opacity)) !important;
}

.hover\:text-blue-600:hover {
	--tw-text-opacity: 1 !important;
	color: rgba(5, 116, 228, var(--tw-text-opacity)) !important;
}

.hover\:text-blue-400:hover {
	--tw-text-opacity: 1 !important;
	color: rgba(34, 150, 254, var(--tw-text-opacity)) !important;
}

.hover\:opacity-100:hover {
	opacity: 1 !important;
}

.hover\:opacity-80:hover {
	opacity: .8 !important;
}

.focus\:text-blue-400:focus {
	--tw-text-opacity: 1 !important;
	color: rgba(34, 150, 254, var(--tw-text-opacity)) !important;
}

.focus\:underline:focus {
	text-decoration: underline !important;
}

.focus\:shadow-outline:focus {
	--tw-shadow: 0 0 0 3px rgba(66, 153, 225, 0.5) !important;
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
}

.focus\:outline-none:focus {
	outline: 2px solid transparent !important;
	outline-offset: 2px !important;
}

.focus\:ring-2:focus {
	--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color) !important;
	--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
	box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000) !important;
}

.focus\:ring-blue-500:focus {
	--tw-ring-opacity: 1 !important;
	--tw-ring-color: rgba(0, 132, 255, var(--tw-ring-opacity)) !important;
}

.group:hover .group-hover\:opacity-100 {
	opacity: 1 !important;
}
